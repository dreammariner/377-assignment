Michael Herbert
Dan Gereb

We began by setting up a GitHub repository to allow our collaboration to extend beyond in person meet ups, due to conflicting schedules. Once the skeleton of the project was laid out, we split up different areas to research and return with. Dan volunteered to look into implementing our own Bounded Buffer while Michael decided to explore how semaphores are implemented in Java. Deciding what data structure to use for our Bounded Buffer was tricky, but ultimately we decided on . For MapReduce, the mapper is the producer while the reducer is the consumer. The synchronization works in the case that the consumer cannot consume without the producer not having produced anything AND the producer cannot produce when the buffer is full. Also, maintaining a counter variable that decrements when a map thread terminates, synchronization is used to protect the counter from being inaccurately decremented between threads. Javaâ€™s synchronized method was utilized.